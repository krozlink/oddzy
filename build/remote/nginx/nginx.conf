events {
    worker_connections 768;
}

http {
    include       mime.types;

    server {
        listen 80;
        server_name www.oddzy.xyz;

        if ($http_x_forwarded_proto != 'https') {
            rewrite ^ https://$host$request_uri? redirect;
        }
        
        location / {
            root /var/oddzy/www;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }
    
    # Redirect http -> https and oddzy.xyz to www.oddzy.xyz
    server {
        listen 80;
        server_name oddzy.xyz;

        location /healthcheck {
            return 200 'true';
            add_header Content-Type text/plain;
        }

        location / {
            rewrite ^ https://www.$host$request_uri? redirect;
        }
    }

    server {
        listen 8080;
        server_name internal.oddzy.xyz;

        auth_basic           "Administratorâ€™s Area";
        auth_basic_user_file /etc/nginx/password/.htpasswd;

        if ($http_x_forwarded_proto != 'https') {
            rewrite ^ https://$host$request_uri? redirect;
        }

        location /rpc {
            proxy_pass http://localhost:8090/rpc;
        }
        
        location /grafana {
            rewrite ^/grafana/(.*)  /$1 break;
            proxy_pass http://localhost:3000/grafana/;
            proxy_set_header Host $host;
        }

        location /kibana/ {
            proxy_set_header Host $host;
            proxy_pass http://localhost:5601/kibana/;
        }
        
        location /microweb/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://localhost:8090/;
        }

        location /prometheus/ {
            proxy_set_header Accept-Encoding "";
            proxy_pass http://localhost:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            sub_filter_types text/html;
            sub_filter_once off;
            sub_filter '="/' '="/prometheus/';
            sub_filter 'var PATH_PREFIX = "";' 'var PATH_PREFIX = "/prometheus";';

            rewrite ^/prometheus/?$ /prometheus/graph redirect;
            rewrite ^/prometheus/(.*)$ /$1 break;
        }
    }

    server {
        listen 80;
        server_name api.oddzy.xyz;

        location / {
            proxy_set_header Host $host;
            proxy_pass http://localhost:8081/;
        }
    }
    server {
        listen 80;
        server_name socket.oddzy.xyz;

        location / {
            proxy_set_header Host $host;
            proxy_set_header Access-Control-Allow-Origin *;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_pass http://localhost:8882/;
        }
    }
}